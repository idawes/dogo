// Test line comment
/* BasicAttrTypesObject tests all the basic attribute types, single-line and multi-line methods and method imports. 
	This comment also tests block comments */
type 1 BasicAttrTypesObject concrete { 
	// test internal comment
	imports {
		"time"
		"github.com/davecgh/go-spew/spew"
	}
	attributes {
		// test line comment at beginning of attribute block
		1 VByte   byte
		2 VUint   uint
		3 VUint8  uint8
		4 VUint16 uint16
		5 VUint32 uint32
        6 VUint64 uint64

		// test line comment in the middle of attribute block 
        7  VInt     int
        8  VInt8    int8
		9  VInt16   int16
		10 VInt32   int32
		11 VInt64   int64
        12 VFloat32 float32
        13 VFloat64 float64
		14 VString  string
		15 VTime    time.Time

		// test line comment at the end of attribute block
	}
	methods {
		func Dump() string {
			return spew.Sdump(*this)
		}
		func ConditionalDump(t bool) string {
			if t {
				return this.Dump()
			}
			return ""
		}
	}
}

type 2 ExtendedObject concrete extends BasicAttrTypesObject {
	attributes {
		1 ExtendedByteField byte
	}
	methods {
		func Dump() string {
			this.ExtendedByteField = 4
			return ##super##()
		}
		func ConditionalDump(t bool) string {
			return ##super##(!t)
		}		
	}
}

type 3 SliceTestObject concrete {
	imports {
		"time"
		"github.com/davecgh/go-spew/spew"
	}
	attributes {
		1  VByte    []byte
        2  VUint    []int
		3  VUint8   []uint8
		4  VUint16  []uint16
		5  VUint32  []uint32
		6  VUint64  []uint64
        7  VInt     []int
		8  VInt8    []int8
		9  VInt16   []int16
		10 VInt32   []int32
		11 VInt64   []int64
		12 VFloat32 []float32
		14 VFloat64 []float64
		15 VString  []string
		16 VTime    []time.Time
	}
	methods {
		func Dump() string {
			return spew.Sdump(*this)
		}
	}
}

type 6 MapTestObject concrete {
    imports {
        "time"
    }
    attributes {
        1 o1 map[byte]time.Time
        2 o2 map[byte]map[byte]string
    }
}

type 5 StructTestObject concrete {
	attributes {
		1 B BasicAttrTypesObject
        2 MB map[int]BasicAttrTypesObject
	}
}

/*type 2 MacBasedMoKey concrete extends MoKey {
	import {
		"net"
	}
	attributes {
		1 Mac [6]byte
	}
	methods {
		func String() string {
			return net.HardwareAddr(this.Mac[:]).String()
		}
	}
}

type 3 ManagedObject abstract {
	attributes {
		1 LastChangeTimestamp time.Time non-persistent
	}
	methods {
		func Key() MoKey {
			return &this.MoKey
		}
	}
}

type 4 HierarchicManagedObject abstract extends ManagedObject {
	attributes {
		1 Parent HierarchicManagedObject ephemeral
		2 Root HierarchicManagedObject ephemeral
		3 Children []HierarchicManagedObject ephemeral
	}
}

type 5 Node concrete extends HierarchicManagedObject {
	attributes {
		1 MoKey MacBasedMoKey
		2 BankA FirmwareBank
		3 BankB FirmwareBank
		4 CustomFields []string
		5 MgmtIpAddress string
	}
}

//type 6 FirmwareBank concrete {
//	attributes {
//		1 Major uint8
//		2 Minor uint8
//		3 Sub uint8
//		4 Build uint16  
//	}
//}
*/
